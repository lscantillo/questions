---
openapi: 3.0.1
info:
  title: API V1
  version: v1
definitions:
  comment:
    type: object
    properties:
      text_content:
        type: string
      question_id:
        type: integer
    required:
    - text_content
    - question_id
  department:
    type: object
    properties:
      name:
        type: string
      abbreviation:
        type: string
      is_active:
        type: boolean
    required:
    - name
    - is_active
  employee:
    type: object
    properties:
      full_name:
        type: string
      email:
        type: string
      is_admin:
        type: boolean
      job_title:
        type: string
      profile_picture_url:
        type: string
    required:
    - full_name
    - email
  location:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
    required:
    - name
    - code
  question:
    type: object
    properties:
      header:
        type: string
      text_content:
        type: string
      is_anonymous:
        type: boolean
      employee_id:
        type: integer
      assigned_to_employee_id:
        type: integer
      department_id:
        type: integer
      location_id:
        type: integer
    required:
    - header
    - text_content
  tag:
    type: object
    properties:
      name:
        type: string
    required:
    - name
  vote:
    type: object
    properties:
      is_up_vote:
        type: boolean
      question_id:
        type: integer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
      in: header
security:
- bearerAuth: []
paths:
  "/api/comments":
    post:
      summary: Creates a Comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comment created
          content:
            application/json:
              example:
                id: 1
                text_content: string
                is_answer: false
                created_at: date
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/comment"
        required: true
    get:
      summary: Get all Comments
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Comments
      responses:
        '200':
          description: comment list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  text_content: string
                  is_answer: false
                  created_at: date
                  employee:
                    id: 0
                    full_name: string
                    email: string
                    is_admin: false
                    job_title: string
                    profile_picture_url: string
                    department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/comments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comment updated
          content:
            application/json:
              example:
                id: 1
                text_content: string
                is_answer: false
                created_at: date
                employee:
                  id: 0
                  full_name: string
                  email: string
                  is_admin: false
                  job_title: string
                  profile_picture_url: string
                  department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/comment"
        required: true
    get:
      summary: Show a Comment by id
      tags:
      - Comments
      responses:
        '200':
          description: comment updated
          content:
            application/json:
              example:
                id: 1
                text_content: string
                is_answer: false
                created_at: date
                employee:
                  id: 0
                  full_name: string
                  email: string
                  is_admin: false
                  job_title: string
                  profile_picture_url: string
                  department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    delete:
      summary: Delete a Comment by id
      tags:
      - Comments
      responses:
        '200':
          description: comment deleted
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/departments":
    post:
      summary: Creates a Department
      tags:
      - Departments
      parameters: []
      responses:
        '200':
          description: department created
          content:
            application/json:
              example:
                id: 1
                name: string
                is_active: true
                abbreviation: string
                employees:
                - id: 0
                  full_name: string
                  email: string
                  is_admin: false
                  job_title: string
                  profile_picture_url: string
                  department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/department"
        required: true
    get:
      summary: Get all Departments
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Departments
      responses:
        '200':
          description: department list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: string
                  is_active: true
                  abbreviation: string
                  employees:
                  - id: 0
                    full_name: string
                    email: string
                    is_admin: false
                    job_title: string
                    profile_picture_url: string
                    department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '404':
          description: Resource not Found
        '401':
          description: Authentication failed
  "/api/departments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Department
      tags:
      - Departments
      parameters: []
      responses:
        '200':
          description: department updated
          content:
            application/json:
              example:
                id: 1
                name: string
                is_active: true
                abbreviation: string
                employees:
                - id: 0
                  full_name: string
                  email: string
                  is_admin: false
                  job_title: string
                  profile_picture_url: string
                  department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/department"
        required: true
    get:
      summary: Show a Department by id
      tags:
      - Departments
      responses:
        '200':
          description: department updated
          content:
            application/json:
              example:
                id: 1
                name: string
                is_active: true
                abbreviation: string
                employees:
                - id: 0
                  full_name: string
                  email: string
                  is_admin: false
                  job_title: string
                  profile_picture_url: string
                  department_id: 0
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    delete:
      summary: Delete a Department by id
      tags:
      - Departments
      responses:
        '200':
          description: department deleted
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/employees":
    post:
      summary: Creates a Employee
      tags:
      - Employees
      parameters: []
      responses:
        '200':
          description: employee created
          content:
            application/json:
              example:
                id: 1
                full_name: string
                email: string
                is_admin: true
                job_title: string
                profile_picture_url: string
                department_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/employee"
        required: true
    get:
      summary: Get all Employees
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Employees
      responses:
        '200':
          description: employee list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  full_name: string
                  email: string
                  is_admin: true
                  job_title: string
                  profile_picture_url: string
                  department_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/employees/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update an Employee
      tags:
      - Employees
      parameters: []
      responses:
        '200':
          description: employee updated
          content:
            application/json:
              example:
                id: 1
                full_name: string
                email: string
                is_admin: true
                job_title: string
                profile_picture_url: string
                department_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/employee"
        required: true
    get:
      summary: Show an Employee by id
      tags:
      - Employees
      responses:
        '200':
          description: employee updated
          content:
            application/json:
              example:
                id: 1
                full_name: string
                email: string
                is_admin: true
                job_title: string
                profile_picture_url: string
                department_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    delete:
      summary: Delete an Employee by id
      tags:
      - Employees
      responses:
        '200':
          description: employee deleted
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/admins":
    get:
      summary: Admin List
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Admins
      responses:
        '200':
          description: Admins list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  full_name: string
                  email: string
                  is_admin: true
                  job_title: string
                  profile_picture_url: string
                  department_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/locations":
    post:
      summary: Creates a Location
      tags:
      - Locations
      parameters: []
      responses:
        '200':
          description: location created
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/location"
        required: true
    get:
      summary: Get all Locations
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Locations
      responses:
        '200':
          description: location list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: string
                  code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/locations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Location
      tags:
      - Locations
      parameters: []
      responses:
        '200':
          description: location updated
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/location"
        required: true
    get:
      summary: Show a Location by id
      tags:
      - Locations
      responses:
        '200':
          description: location updated
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    delete:
      summary: Delete a Location by id
      tags:
      - Locations
      responses:
        '200':
          description: location deleted
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/questions":
    get:
      summary: list questions
      tags:
      - Questions
      parameters:
      - name: layout
        in: query
        default: classic
        schema:
          type: string
      - name: items
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                data:
                - id: 0
                  header: string
                  created_at: date
                  vote_count: 0
                  comment_count: 0
                  is_anonymous: true
                  text_content: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    post:
      summary: create question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 0
                header: string
                created_at: date
                vote_count: 0
                comment_count: 0
                is_anonymous: true
                text_content: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/question"
        required: true
  "/api/questions/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show question
      tags:
      - Questions
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 0
                header: string
                created_at: date
                vote_count: 0
                comment_count: 0
                is_anonymous: true
                text_content: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
    patch:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 0
                header: string
                created_at: date
                vote_count: 0
                comment_count: 0
                is_anonymous: true
                text_content: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/question"
        required: true
    put:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              example:
                id: 0
                header: string
                created_at: date
                vote_count: 0
                comment_count: 0
                is_anonymous: true
                text_content: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/question"
        required: true
    delete:
      summary: delete question
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/tags":
    post:
      summary: Creates a Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: tag created
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/tag"
        required: true
    get:
      summary: Get all Tags
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Tags
      responses:
        '200':
          description: tag list received
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: string
                  code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/tags/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: tag updated
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
        '409':
          description: No changes
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/tag"
        required: true
    get:
      summary: Show a Tag by id
      tags:
      - Tags
      responses:
        '200':
          description: tag updated
          content:
            application/json:
              example:
                id: 1
                name: string
                code: string
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
    delete:
      summary: Delete a Tag by id
      tags:
      - Tags
      responses:
        '200':
          description: tag deleted
        '401':
          description: Authentication failed
        '404':
          description: Resource not Found
  "/api/votes":
    post:
      summary: Creates a Vote
      tags:
      - Votes
      parameters: []
      responses:
        '200':
          description: vote created
          content:
            application/json:
              example:
                is_up_vote: true
                question_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/definitions/vote"
        required: true
    delete:
      summary: Deletes a Vote
      tags:
      - Votes
      parameters: []
      responses:
        '200':
          description: vote created
          content:
            application/json:
              example:
                is_up_vote: true
                question_id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                error: 0
                message: string
        '401':
          description: Authentication failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: integer
        required: true
  "/healthcheck":
    get:
      summary: View status
      tags:
      - HealthCheck
      responses:
        '200':
          description: Success
        '503':
          description: Service Unavailable
servers:
- url: https://wizeline-questions-qa.herokuapp.com
- url: http://localhost:3000
