---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/comments":
    post:
      summary: Creates a Comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comment created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                question_id:
                  type: integer
                is_answer:
                  type: boolean
              required:
              - text_content
              - question_id
        required: true
    get:
      summary: Get all Comments
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Comments
      responses:
        '200':
          description: comment list received
  "/api/comments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comment updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                question_id:
                  type: integer
                is_answer:
                  type: boolean
              required:
              - text_content
              - question_id
        required: true
    get:
      summary: Show a Comment by id
      tags:
      - Comments
      responses:
        '200':
          description: comment updated
    delete:
      summary: Delete a Comment by id
      tags:
      - Comments
      responses:
        '200':
          description: comment deleted
  "/api/departments":
    post:
      summary: Creates a Department
      tags:
      - Departments
      parameters: []
      responses:
        '200':
          description: department created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                abbreviation:
                  type: string
                is_active:
                  type: boolean
              required:
              - name
              - is_active
        required: true
    get:
      summary: Get all Departments
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Departments
      responses:
        '200':
          description: department list received
  "/api/departments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Department
      tags:
      - Departments
      parameters: []
      responses:
        '200':
          description: department updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                abbreviation:
                  type: string
                is_active:
                  type: boolean
              required:
              - name
              - is_active
        required: true
    get:
      summary: Show a Department by id
      tags:
      - Departments
      responses:
        '200':
          description: department updated
    delete:
      summary: Delete a Department by id
      tags:
      - Departments
      responses:
        '200':
          description: department deleted
  "/api/employees":
    post:
      summary: Creates a Employee
      tags:
      - Employees
      parameters: []
      responses:
        '200':
          description: employee created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                email:
                  type: string
                is_admin:
                  type: boolean
                job_title:
                  type: string
                profile_picture_url:
                  type: string
              required:
              - full_name
              - email
        required: true
    get:
      summary: Get all Employees
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Employees
      responses:
        '200':
          description: employee list received
  "/api/employees/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update an Employee
      tags:
      - Employees
      parameters: []
      responses:
        '200':
          description: employee updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                email:
                  type: string
                is_admin:
                  type: boolean
                job_title:
                  type: string
                profile_picture_url:
                  type: string
              required:
              - full_name
              - email
        required: true
    get:
      summary: Show an Employee by id
      tags:
      - Employees
      responses:
        '200':
          description: employee updated
    delete:
      summary: Delete an Employee by id
      tags:
      - Employees
      responses:
        '200':
          description: employee deleted
  "/api/admins":
    get:
      summary: Admin List
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Admins
      responses:
        '200':
          description: employee list received
  "/api/locations":
    post:
      summary: Creates a Location
      tags:
      - Locations
      parameters: []
      responses:
        '200':
          description: location created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                code:
                  type: string
              required:
              - name
              - code
        required: true
    get:
      summary: Get all Locations
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Locations
      responses:
        '200':
          description: location list received
  "/api/locations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Location
      tags:
      - Locations
      parameters: []
      responses:
        '200':
          description: location updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                code:
                  type: string
              required:
              - name
              - code
        required: true
    get:
      summary: Show a Location by id
      tags:
      - Locations
      responses:
        '200':
          description: location updated
    delete:
      summary: Delete a Location by id
      tags:
      - Locations
      responses:
        '200':
          description: location deleted
  "/api/questions":
    get:
      summary: list questions
      tags:
      - Questions
      parameters:
      - name: layout
        in: query
        default: classic
        schema:
          type: string
      - name: items
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  type: string
                text_content:
                  type: string
                is_anonymous:
                  type: boolean
                employee_id:
                  type: integer
                assigned_to_employee_id:
                  type: integer
                department_id:
                  type: integer
                location_id:
                  type: integer
              required:
              - header
              - text_content
        required: true
  "/api/questions/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show question
      tags:
      - Questions
      responses:
        '200':
          description: successful
    patch:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  type: string
                text_content:
                  type: string
                is_anonymous:
                  type: boolean
                employee_id:
                  type: integer
                assigned_to_employee_id:
                  type: integer
                department_id:
                  type: integer
                location_id:
                  type: integer
              required:
              - header
              - text_content
        required: true
    put:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  type: string
                text_content:
                  type: string
                is_anonymous:
                  type: boolean
                employee_id:
                  type: integer
                assigned_to_employee_id:
                  type: integer
                department_id:
                  type: integer
                location_id:
                  type: integer
              required:
              - header
              - text_content
        required: true
    delete:
      summary: delete question
      tags:
      - Questions
      responses:
        '200':
          description: successful
  "/api/tags":
    post:
      summary: Creates a Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: tag created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
        required: true
    get:
      summary: Get all Tags
      parameters:
      - name: items
        in: query
        required: false
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: integer
      tags:
      - Tags
      responses:
        '200':
          description: tag list received
  "/api/tags/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    put:
      summary: Update a Tag
      tags:
      - Tags
      parameters: []
      responses:
        '200':
          description: tag updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
        required: true
    get:
      summary: Show a Tag by id
      tags:
      - Tags
      responses:
        '200':
          description: tag updated
    delete:
      summary: Delete a Tag by id
      tags:
      - Tags
      responses:
        '200':
          description: tag deleted
  "/healthcheck":
    get:
      summary: View status
      tags:
      - HealthCheck
      responses:
        '200':
          description: Success
        '503':
          description: Service Unavailable
servers:
- url: https://wizeline-questions-qa.herokuapp.com
- url: http://localhost:3000
